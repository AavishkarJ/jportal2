# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
- group: JPortal2SensitiveVariables

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

# Publish Cobertura or JaCoCo code coverage results from a build
# - task: PublishCodeCoverageResults@1
#   inputs:
#     codeCoverageTool: 'JaCoCo' 
#     summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/site/jacoco/jacoco.xml'
#     reportDirectory: '$(System.DefaultWorkingDirectory)/**/site/jacoco'
#     failIfCoverageEmpty: true
- task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
  displayName: 'Prepare analysis on SonarCloud'
  inputs:
    SonarCloud: 'SonarSource Global'
    organization: 'si-gen'
    scannerMode: CLI
    #SonarQube: 'SonarCloud'
    projectKey: $JPortal2SensitiveVariables/SonarSource-JPortal2-ID
    #projectName: SI-Gen_jportal2
    #projectVersion: '$(AssemblyVersion)'
    #extraProperties: |
    # sonar.organization=si-gen
    # sonar.branch.name=$(Build.SourceBranchName)
- task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
  displayName: 'Run Code Analysis'
# - task: CopyFiles@2
#   inputs:
#     contents: '**/*.war'
#     targetFolder: '$(build.artifactStagingDirectory)'

# - task: PublishBuildArtifacts@1
#   inputs:
#     artifactName: 'war'
#     pathToPublish: '$(build.artifactStagingDirectory)'
- task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
  displayName: 'Publish Quality Gate Result'